unit Loop;

interface
uses Base;

type
  TLoop = class abstract(TOperator)
  protected const
    FBlockCount = 1;
  protected
    FBlock: TBlockArr;
    function GetAmountOfPixelCorrection: Integer;

  public
    function GetXLastStrip: Integer;
    function GetBlocks: TBlockArr; override;
    function GetBlockCount: Integer; override;
  end;


implementation

  function TLoop.GetXLastStrip: Integer;
  begin
    Result:= FBaseBlock.XStart + GetAmountOfPixelCorrection;
  end;

  function TLoop.GetAmountOfPixelCorrection: Integer;
  begin
    Result:= 2 * FImage.Canvas.Font.Size + 5;
  end;

  function TLoop.GetBlocks: TBlockArr;
  begin
    Result:= FBlock;
  end;

  function TLoop.GetBlockCount: Integer;
  begin
    Result:= FBlockCount;
  end;

end.
